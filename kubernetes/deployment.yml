apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: nginx
        image: ghcr.io/securitytrip/nginx:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: nginx-conf-d
          mountPath: /etc/nginx/conf.d
        livenessProbe:
          httpGet:
            path: /health
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      - name: nginx-conf-d
        configMap:
          name: nginx-conf-d
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: frontend
        image: ghcr.io/securitytrip/frontend:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        ports:
        - containerPort: 5173
        env:
        - name: NODE_ENV
          value: "production"
        - name: VITE_API_URL
          value: "http://nginx-service/api"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-service
  template:
    metadata:
      labels:
        app: user-service
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: user-service
        image: ghcr.io/securitytrip/user-service:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        ports:
        - containerPort: 8000
        env:
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_DB
          value: "afisha_db"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: parser-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parser-service
  template:
    metadata:
      labels:
        app: parser-service
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: parser
        image: ghcr.io/securitytrip/parser-service:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
        - name: KAFKA_BROKER
          value: "kafka-1-service:29092"
        - name: MONGO_URI
          value: "mongodb://admin:admin123@mongodb-service:27017"
        - name: GROUP_ID
          value: "1"
        - name: TOPIC
          value: "parsing"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: utils-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: utils-service
  template:
    metadata:
      labels:
        app: utils-service
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: utils
        image: ghcr.io/securitytrip/utils-service:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        ports:
        - containerPort: 8182
        env:
        - name: KAFKA_BROKER
          value: "kafka-1-service:29092"
        - name: TOPIC
          value: "parsing"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rate-calculator-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rate-calculator
  template:
    metadata:
      labels:
        app: rate-calculator
    spec:
      imagePullSecrets:
      - name: ghcr-secret
      containers:
      - name: rate-calculator
        image: ghcr.io/securitytrip/rate-calculator:latest
        resources:
          limits:
            cpu: "0.5"
            memory: "512Mi"
          requests:
            cpu: "0.2"
            memory: "256Mi"
        env:
        - name: KAFKA_BROKERS
          value: "kafka-1-service:29092,kafka-2-service:29093"
        - name: KAFKA_TOPIC
          value: "product_rating_update"
        - name: PG_CONN_STR
          value: "dbname=afisha_db user=admin password=admin123 host=postgres-service"
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    protocol: TCP
    name: https
  selector:
    app: nginx
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  ports:
  - port: 5173
    targetPort: 5173
  selector:
    app: frontend
---
apiVersion: v1
kind: Service
metadata:
  name: user-service-service
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: user-service
---
apiVersion: v1
kind: Service
metadata:
  name: parser-service-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: parser-service
---
apiVersion: v1
kind: Service
metadata:
  name: utils-service-service
spec:
  ports:
  - port: 8182
    targetPort: 8182
  selector:
    app: utils-service
---
apiVersion: v1
kind: Service
metadata:
  name: rate-calculator-service
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: rate-calculator